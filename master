๐ Git & GitHub ๐งพ๏ธ
===================

๐งท๏ธ Why GitHub is important?

๐ต GitHub is a centralized platform. Centralized for developers all around the globe. A person can just host the repository created in Git to the whole world. Using this,
it increases the chances of better project development and in less time. GitHub provides you with the easiness of combining the changes and removes the headache of sharing the large code files. If GitHub is not there,
you will face a series of challenges in order to work together as a team.

First of all, the code needs to be shared among your teammates. A code file on a big project is heavy and will take a lot of resources. After the upload,
when your teammates will make the changes to the file, they still have to upload the complete file each and every time. This problem is not present when you use GitHub.
Just make the changes and push only the changes to the main code file. It will be fast and easy. As a project owner, you can track these changes quite easily on it.


๐งท๏ธ This Summary includes :

What is Git and Github ?
Why you must learn Git ?
Words you will hear
Important Notes
How to get start
Add / Reset / Commit Repository
How to Push Local Changes To Remote Repository
Everything about configuration
How to generate and test github public key
How to create repository from existing project
Everything about aliase
braching and merging
Mastering Stash
How to Restore / clean files
resetting the head
ignoring files and directories
tagging and releasing
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ What is Git and Github ?

๐ Git is distributed version control System

๐ ุงู git ุจูููุฏู ุงู versions ุจุชุงุนุชู
ูู ุงูุช ุจุชุดุชุบู ูู house software ุงู ูู ุฃู ุดุฑูุฉ ู ุนูุฏูู project ูุนูู ุดุบุงููู ุนููู ู 
ุงู project ุฏุง ุจูุทูุฑ ูุน ุงูููุช ุณูุงุก ุจุชุญููุง ููู ูุดุงูู ูุนููุฉ ุงู ุจุชุถูููุง ููู features ุฌุฏูุฏุฉ 
ุงู ุจุชุนูููุง enhance ููููุฏ ู ุงููุฑุงุญู ุงููู ุงูุช ุจุชูุฑ ุจููุง ุฏู ูููุง ุงุณููุง


๐ Git is free and open source

๐ ุฃู tool ุจุชุดุชุบู ุจููุง ุงูุฒู ุชุนุฑู ูู ุจูููุณ ูุงู ุฃู ุนุดุงู ุชูุฑุฑ ูุจู ูุง ุชุชููู ุนููุง ุงู ุชุดุชุบู ุจููุง 
ูู ูู ูุญุชุงุฌุฉ ููู cost ูุงู ุฃู 
ุงู git ุนุจุงุฑุฉ ุนู free ูsource



๐ Github is source for projects and sources [Gitlab , BitBucket]

๐  Github ุนุจุงุฑุฉ ุนู website ููู source ุงู projects ุงููู ุงูุช ุจุชุดูููุง 
ุงูุดุฑูุงุช ูููุง ุจุชุญุท ููู ุงู source ุจุชุงุน ุงู projects ุจุชุงุนุชูู ุณูุงุก ุงูุญุงุฌุงุช ุงู open
sourceุงู ุงูููุชุจุงุช ุงููู ุงูุช ุจุชุดุชุบู ุนูููุง ูุชุงููู ุงู project ุจุชุงุนูุง ููุฌูุฏ ุนูู github
ูููู ุช contribute ุนููู ู ุชุญุท ููู ุชุนุฏูุงูุช ู ูุฏุง
ูู ููุงูุน ูุชูุฑ ุฒู gitlab ู bitbucket ุจุชุฃุฏู ููุณ ูุธููุฉ



 Github simplify using Git

๐ ุงู github ุจูุณูู ุงุณุชุฎุฏุงู ุงู git ุจุทุฑููุฉ ุจุณูุทุฉ ู ุณููุฉ ู ุจูุฏููู ุดููุฉ ุฅููุงููุงุช ูููุณุฉ ุฒู 
issue trackerุงู


๐  --> you can use Git without Github
    --> Git has GUI

๐ ุงู git ููู ูุงุฌูุฉ ุฌุฑุงููููุฉ ูุนูู ุชูุฏุฑ ุชุณุชุฎุฏูู ุจุงู mouse ุนุงุฏู 
ุญุชู ูููุน Github ููู ุจุฑูุงูุฌ ุงุณูู desktop github ุชูุฏุฑ ุชุนูู ููู ูู ุงููุตุฉ ุฏู ุจุงู
mouse ุนุงุฏู

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Why you must learn Git ?

๐  Devs Contribute to the same project

๐ ูุน ุงู Git ูููุง ุจู contribute ูุจุฑูุฌููุช ูุงุญุฏ ูููุด ุญุฏ ูููุตู ุงู ุดุบุงู ููุญุฏู




๐ you can revert changes

๐ ุชูุฏุฑ ุช changes revert ู ุชุนุฑู ููู ุนูููุง ู ุชูุฏุฑ ุชูุบููุง
-- you can collaborate to fix issues
-- you can collaborate to create new features
-- you can solve conflicts
ูู ูุงุญุฏ ุฎุฏ function ูุนููุฉ ู ุนุฏู ุนูููุง ู ุงู function ุฏู ูููุง ุนูุฏู ุงุฎุชุงูู ู ุจุณูููุฉ 
ุดุฏูุฏุฉ ุจูุฌูุจ ุงุงูุชููู ู ูุฌูุจ ููุงุฑูุฉ ูุจูููู ู ูุดูู ุงู conflict ููู ู ุชุนุฏู ู ุชุฑูุน ู ูุชุงููู 
ุงูุดุฎุต ุงูุชุงูู ูุงุฎุฏ ุงููุณุฎุฉ ุงูุณูููุฉ ุงู ุงูุนูุณ
-- you can organize features

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Words you will hear 

๐ Repository
๐ูู ุงููุณุชูุฏ ุน ุงููู ุจุชุญุท ููู ุงููุงุฏ ุงู project ุจุชุงุนู ูุงููุฉ ูู ุงูุช ูุซุงู ุนูุฏู projects two
ุดุบุงู ุนูููู ูู ุงูุดุฑูุฉ ู ุงูููุฑูุถ ูููู ุนูุฏู ุงุชูููrepository
ุงู repository ุจูุฎุชุตุฑููุง ูr


๐ Branch
๐ ูุนูู ูุณู ุงู ูุฑุน
ุงู branch ูู ุนุงูู ุงู Git ูุฑุน ูู ุงู repo ูููู ุชุงุฎุฏ branch ุนุดุงู ุชุนูู ุชุนุฏูู ูุนูู 
ุจุณ ูู ุงูุจุฑูุฌููุช ุงูุชุนุฏูู ูููู ูููู ุฅุถุงูุฉ ุตุบูุฑุฉ ูุทููุจุฉ ููู ุงู ูููู ุชุงุฎุฏู ุชุญู ุจูู
bugุทุจุนุง ุฏู ุขููุฉ ูู ุดุฑูุฉ ูุดุฑูุฉ ููู ุฏุง ุงุฃูุณุงุณ


๐ Local Repo
๐ ุงู local ูู ุงูุญุงุฌุฉ ุจุชุงุนุชู ุงูุช ุงููู ุดุบุงู ุนูููุง ุฏูููุชู ุนูู ุงู PC ุจุชุงุนู 


๐ Remote Repo
๐ ุงู remote ููุง ูููู ูููู ูููุน ุงู github ุงู ุงู bitbucket ุงู ุงู gitlab ุงู ุงูุณูุฑูุฑ ุจุชุงุน 
ุงูุดุฑูุฉ


๐ Commit (snapshot or checkpoint in your local Repo)
๐ ููุง ุงูุช ุชุนูู ุชุนุฏูู ูุนูู ุงู ุฎูุตุช feature ูุนููุฉ ุงู ุญููุช ุงู bug ุจุชุนููcommit
ุงู commit ุฏุง ุจูุนูู checkpoint ููููุฏ ูู ุงู repo local ุจุชุงุนู


๐ Clone [from local to remote]
๐ Cloneูุนูู ุงุณุชูุณุงุฎ ุจุณุชูุณุฎ ุงู repo ุงูุง ูู ุงู local ุงู ุงูremote
ุงู local ูููู ุชุณุชูุณุฎ ููู ุจุณ ูู location ุชุงูู


๐ push [upload local changes to remote]
๐ ุงู push ุจุชุฑูุน ููู ุจุช upload ุงู changes ุจุชุงุนุชู ูู repo re


๐ pull [you pull changes from remote repo to your local] 
๐ ุงู pull ุจุชุณุญุจ ุงูุชุนุฏูุงูุช ูู ุงู repo remote ูู repo local ุจุชุงุนุชู

๐ pull request [tell other about your changes to pull it from local to remote]
๐ ุงู request pull ุงูุช ุนููุช ุชุนุฏูู ูุนูู ู ุจุชููู ููู ูุนุงู ูู ุชุนุฏูู ุนุงูุฒู ุชุงุฎุฏู ูู ุงู
localูู remote ุนูุฏู


๐README
๐ ุจููุชุจ ููู ุฃู ุญุงุฌุฉ ุชุฎุต ุงููุดุฑูุน ุฃู notes ุนุงูุฒ ุชุญุทูุง ูู ุงููุดุฑูุน ุฃู ุญุงุฌุฉ ูุญุชุงุฌ 
ุงูุดุฎุต ููุง ูุฌู ูุฏุฎู ุนูู ุงููุดุฑูุน ูุนูู ุฃู ุญุงุฌุฉ ูุดูู ูุซุงู ุงู steps ุฏู ูุนูููุง
ุงู README ููู ุฌุฏุง ุจูููู ููู ุงูุญุงุฌุงุช ุงููู ูููู ุชุฎูู ุงููุงุณ ููุบูุทูุด ูู ุญุงุฌุฉ ูุซุงู 
ุงูุช ุจุชุนูููุง 
ุงูุชุฏุงุฏู md ู ุฏู markdown ุจุชูุชุจ ุจููุง ุฒู ุงู text ูุฏุง ุจุณ ุจุชูุซูู
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Important Notes 

โป Create Repository for every project
โป Create a new branch for every feature or enhancement
โป No need to connect to remote repo when working
โป Anyone can push and pull depend on permissions

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Getting Started

you can create a repository with either of the following 
commands :
โ git clone < your repository URL >
๏ฐ Copies a remote repository into your current directory
โ git init
๏ฐ Creates a new empty repo in your current directory
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Add / Reset / Commit

show status :
โ git status
๏ฐ Lists changes in working directory and stages files
status Git ุจููุฑููู ุงูุญุงูุฉ ุงู ุงูู ุงููู ูุงูุต ุงู ุงูู ุงููู ุนูุฏู ูู ุงู directory working ูุนูู ุจูููููู 
ุงูู ุงููู ุจูุญุตู 

add files :
โ git add < file1 > < file2 >
๏ฐ Adds < file1 > and < file2 > to the staging area
โ git add *.extention ( git add * .py )
๏ฐ Adds all python files in the current directory to the staging area
โ git add *
๏ฐ Adds all files to the staging area

unstage:
โ git reset head < file >
ุจูุฑุฌุน ุงู file ูู ุงู stage ุงููู ูุด ุนุงูุฒ ุงุนููู track ุนุงูุฒ ุงุณูุจู
โ git reset
๏ฐ removes all files from staging area (opposite of git add)
โ git reset < filename >
๏ฐ removes < filename > from staging area


commit changes :
โ git commit 
๏ฐ Records everything in the staging area to your repository. The default text 
editor will prompt you far a commit message
โ git commit -m โ commit message โ
๏ฐ Records everything in the staging area to your repository with the commit 
message โ commit message โ
โ git commit โamend
๏ฐ Modify last commit instead of creating a new one useful for fixing small 
mistakes

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Push Local Changes To Remote Repository
 
show branches:
โ git branch
๏ฐ list branches
โ git branch < branch-name >
๏ฐ create new branch < branch-name >
โ git remote -v
๏ฐ git remote repository

push changes :
โ git push < Repo > < Branch >
๏ฐ incorporates changes from local repo into < repo > < branch >
โ git push
๏ฐ incorporates changes from local repo into โoriginโ


pull changes from remote repository :
โ git pull 
๏ฐ incorporates changes from โoriginโ into local repo
โ git pull < repo > < branch >
๏ฐ incorporates changes from < repo > < branch > into local repo

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โ  Everything about configuration

show all configurations :
โ git help config
ูููุชุญ ุงู manual ุจุชุงุน ุงู git ุงููู ููู ุญุงุฌุงุช ูููู ูุชูููุด ููุชูุจุฉ ูู ุงู file ุงููู ุนูุฏู 
โ git config -l
ููุฌุจูู ุงู configuration ุงููู ุนูุฏู 

 show user email :
โ git config --global user.email

change user email :
โ git config โglobal user.email โ your github email here โ

edit configuration :
โ git config --global โedit
โ git config --global credential -helper store
๏ฐ will store your login details next time they are entered, saving you from 
having to enter them again

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โ generate and test github public key 

Generate key :
โ ssh -keygen -t rsa -b 4096 -c โ your github email here โ

Git key to copy :
โ cat ~/ .ssh/ id_rsa.pub
same command example in windows " change shorouk with 
your username " :
โ cat c:\users\shorouk\.ssh\id_rsa.pub

test key and connection :
โ ssh -T git@github.com

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โ create repository from existing project

create new directory :
โ mkdir โ your directory name here โ

initialize empty git repository :
โ git init

create empty file :
โ touch โ your file name here โ

show status :
โ git status

add files :
โ git add < file > < file >

commit file :
โ git commit -m โ your commit message hereโ

add repository :
โ git remote add origin โssh repository URLโ

example :
โ git remote add origin โ git@github.com: shorouk/course.gitโ

push data :
โ git push -u origin master
ุงู u -ุจุชุฎููู ุชุนุชุจุฑ ุงูู ุจุชุนูู pull ู ุจุนุฏูู push ุงุงูุชููู ูุชุชุงู ููู

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โฟ Everything about aliases

make alias for command " status " :
โ git config --global alias.st status

show alias content :
โ git config --global alias.st

test "status" command :
โ git st

make alias for command " branch " :
โ git config --global alias.br branch

show alias content :
โ git config --global alias.br

test " branch " command :
โ git br

make alias for command " commit -m " :
โ git config --global alias.cm โ commit -m โ

show alias content :
โ git config --global alias.cm

test " branch " command :
โ git cm

show all edits :
โ git config --global โedit

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โผ braching and merging

show branches :
โ git branch

switch to branch :
โ git checkout โ branch name โ
๏ฐ switch to editing branch < branch-name >

delete branch :
โ git branch -d < branch name >
 d -ุจูุนููู ุญุงุฌุฉ ุงุณููุง delete save ุจูุฎูู ุงู git ู check ูู ุงู branch ุจุชุงุน ูุฏุง ููู ุชุนุฏูุงูุช ูุนููุฉ 
ูุชุนูููุงุด merge ู ูู ุงูุญุงูุฉ ุฏู ูุจูุฑุถุงุด ูุญุฐู 
 D -ุจูุญุฐูู ุญุชู ูู ูู ุชุนุฏูุงูุช 

move / rename branch :
โ git branch -m โ new branch name โ

merge branch with current branch :
โ git merge โ Branch name you need to merge โ
๏ฐ merge < branch name > into current branch

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โผ Mastering Stash

Create text file with " hello world " string inside it :
โ echo โ hello world โ > about readme.txt

save work to stash :
โ git stash

list items in stash :
โ git stash list

Get work from stash :
โ git stash pop
stash ุจุชุฎุฒู ููู ุงููููุงุช ุจุชุงุนุชู ุฒู ุงูุตูุฏูู ุงููู ุจุญุชูุธ ููู ุญุงุฌุฉ ูุญุฏ ูุง ุงุฌู ุงุณุชุฎุฏููุง
 Pop ุจูุฌูุจ ุงููููุงุช ู ูุนูู drop ูู stash

save work to stash with description :
โ git stash save โ description here โ

get specific stash :
โ git stash pop stash@{1}

delete stash :
โ git stash drop stash@{2}

show latest added stash content :
โ git stash show

show specific stash content :
โ git stash show stash@{1}

empty the stash :
โ git stash clear

get work from stash without delete it :
โ git stash apply
 apply ุจูุงุฎุฏ ุงูุชุนุฏูุงูุช ุฒู ูุง ูู ู ูุณูุจูู ุงู stash ูู ููุงูู

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โผ Restore / clean

restore staged files :
โ git restore --staged โ file name here โ
ูู ูุญุชุงุฌ ุงุดูู ูุงูู ูู ุงูarea stage
โ git restore --staged *

show files that will be cleaned :
โ git clean -n

remove un needed files :
โ git clean -f

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โผ resetting the head

ุงู reset ุจูุฎููู ุชุญุฐู ุงู commit ุงููู ุงูุช ูุด ูุญุชุงุฌูุง 
ุจูุฎููู ุชุญุฐู ูุฌููุนุฉ ุงู commits ุงููู ุงูุช ุจุชููู ุนุงูุฒ ุชูุบููุง ุงู ูููุง ูุดุงูู ุงูุง ูุงู 

show log file :
โ git log
๏ฐ prints commit history of repo
โ git log < file name >
๏ฐ prints commit history of < file name >

reset head :
โ git reset --hard " commit hash here "

push edits from local to remote with force flag :
โ git push origin main โforce
ููุง ุจุฎูู ุงู head ุนูุฏ commit ูุนูู ูุจุนุฏูุง ุงุนูู reset ู ูู ุงู commits ุงููู ุจุนุฏู ุจุชุชูุณุญ

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
โผ ignoring files and directories

ุงุฒุงู ูุชุฌุงูู ูููุงุช ูุนููุฉ ุนุดุงู ูุชุชุฑูุนุด ูููุดุฑูุน ุจุชุงุนูุง 
create gitignore file : 
โ touch -gitignore

ููู ุงู gitignore ูู ุงูููู ุงููู ููุญุชูู ุนูู ุงููููุงุช ุงููู ุนุงูุฒูู ูุชุฌุงูููุง ู ูุชุชุฑูุนุด ูุน ุงู project
push file that is ignored :
โ git add -f < file name >
โ git add --force < filename >

ููุง ูุจูู ูู file ูู ุงู gitignored ู ุนุงูุฒ ุงุนููู push
example for gitignored file content :
*.log
! vip.log
node_packs/
text.txt

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โผ tagging and releasing
ุงู tag ูู ุญุงุฌุฉ ุจุชุฎููู ุชุนูู ุนูู ุฌุฒุก ูุนูู ูู ุงููุดุฑูุน ุจุชุงุนู ูู ุญูุจุฉ ุฒูุงููุฉ ูุนููุฉ 
ุจูุณุชุฎุฏูููุง ุฏูููุชู ูุงูุตุฏุงุฑุงุช ูู ุงููุดุฑูุน ุจุชุงุนู 
ููุฒุฉ ุงู tag ุจุชุฎููู ุชุญูู ุงูุฌุฒุก ุงุงููู ููุญุฏู ู ุงูุฌุฒุก ุงูุชุงูู ููุญุฏู ู ููุฐุง 
show all tags :
โ git tag

add new lightweight tag :
โ git tag " version name or tag name here "

ุงู tag lightweight git ูู tag ูุฑุชุจุทุฉ ุจุงู commit ุญุชู ุงููุนูููุงุช ุงู ุงู message ุงููู ุงูุช ูุชุจุชูุง 
ูู ุงู commit
add new annotated tag :
โ git tag -a " version name or tag name here " -m " description or 
message "
ุงู tag annotated ูููุงุด ุนุงููุฉ ุจุงู commit ุงูุช ุจููุณู ุงููู ูุชูุชุจ ุงู description ุงูุฎุงุต ุจููุง 
push tag to remote :
โ git push origin " tag name here "
list all tags starting with v1 : 
โ git tag -1 "v1.*"
delete tag :
โ git tag -d " version name or tag name here "
delete tag from remote :
โ git push origin --delete "version name or tag name here"

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

โ Waled Saied  
